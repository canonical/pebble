name: pebble
adopt-info: pebble-release-data
summary: Pebble - take control of your internal daemons!
description: |
  Pebble helps you to orchestrate a set of local service processes
  as an organized set. It resembles well-known tools such as supervisord,
  runit, or s6, in that it can easily manage non-system processes
  independently from system services, but it was designed with unique
  features that help with more specific use cases.

  **Usage**

  You can use the `pebble` command to:

  * Start and stop services that are defined in Pebble's service configuration.
  * Modify Pebble's service configuration by adding or removing layers.
  * Check the health of services.
  * Manage services remotely, as a client interacting with Pebble in a separate system.
  * And more!

  Pebble stores its service configuration in the `$PEBBLE/layers` directory.
  When Pebble is installed as a snap, the `PEBBLE` environment variable is
  set to `$HOME/snap/pebble/<snap_revision>` by default.

  **Documentation**

  To learn more about Pebble, see https://documentation.ubuntu.com/pebble/.
issues: https://github.com/canonical/pebble/issues
source-code: https://github.com/canonical/pebble
license: GPL-3.0
base: bare
build-base: core22
confinement: classic

apps:
  pebble:
    command: pebble-wrapper

parts:
  pebble:
    plugin: go
    source: .
    build-snaps:
      - go/1.24/stable
    # The snap build relies on the cmd/version*.go files within the source path.
    # For proper versioning, run "go generate ./cmd/" before building the snap.
    # If doing a "snapcraft remote-build", ensure you've also run
    # "git add -f ./cmd/VERSION ./cmd/version_generated.go".
    override-build: |
      CGO_ENABLED=0 go build -trimpath -ldflags=-w -ldflags=-s -o $CRAFT_PART_INSTALL/bin/pebble ./cmd/pebble

  pebble-release-data:
    plugin: nil
    source: .
    override-build: |
      version="$(${CRAFT_STAGE}/bin/pebble version --client)"

      # Set snap version
      craftctl set version="$version"

      # Pebble releases are semantically versioned and have a "v" prefix
      [[ "${version}" == *"git"* ]] && grade=devel || grade=stable
      craftctl set grade="$grade"
    after: [pebble]

  # Dump the pebble-wrapper into the snap.
  pebble-wrapper:
    plugin: dump
    source: ./snap/local
