openapi: 3.1.0
info:
  title: Pebble API
  version: v1
servers:
  - url: https://localhost:4000/v1
paths:
  /v1/services:
    get:
      summary: Get services
      tags:
        - services
      parameters:
        - in: query
          name: names
          description: The names of the services to get, a comma-separated string. If empty, get all services.
          schema:
            type: string
          examples:
            one:
              value: svc1
              summary: one service name
            two:
              value: svc1,svc2
              summary: multiple services names, comma separated
      responses:
        '200':
          description: List of services
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOfServices"
              examples:
                list all services:
                  value:
                    - type: sync
                      status-code: 200
                      status: OK
                      result:
                        - name: "svc1"
                          startup: "enabled"
                          current: "active"
                          current-since: "2024-12-11T20:10:33.381993977+08:00"
                        - name: "svc2"
                          startup: "disabled"
                          current: "stopped"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: # Example for 500 error
                401:
                  value:
                    type: error
                    status-code: 401
                    status: Unauthorized
                    result:
                      kind: login-required
                      message: access denied
                500:
                  value:
                    type: error
                    status-code: 500
                    status: Internal Server Error
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          description: Response type, "error".
        status-code:
          type: integer
          description: HTTP response status code.
        status:
          type: string
          description: The text for the HTTP status code, see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml.
        result:
          $ref: "#/components/schemas/errorResult"
    errorResult:
      type: object
      properties:
        message:
          type: string
          description: Error message.
        kind:
          type: string
          description: Error kind, possible values are "login-required", "no-default-services", "not-found", "permission-denied", "generic-file-error", "system-restart", and "daemon-restart".
    ListOfServices:
      type: object
      properties:
        type:
          type: string
          description: Response type, one of "sync", "async", "error".
        status-code:
          type: integer
          description: HTTP response status code.
        status:
          type: string
          description: The text for the HTTP status code, see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml.
        result:
          $ref: "#/components/schemas/serviceInfo"
    serviceInfo:
      type: object
      properties:
        name:
          type: string
        startup:
          type: string
        current:
          type: string
        current-since:
          type: string
          format: date-time
